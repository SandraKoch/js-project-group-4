{"mappings":"AAAA,MAAMA,EAASC,SAASC,eAAe,UACjCC,EAAaF,SAASC,eAAe,eACrCE,EAAcH,SAASC,eAAe,gBAE5C,SAASG,IACPL,EAAOM,UAAUC,IAAI,SACvB,CAEA,SAASC,IACPR,EAAOM,UAAUG,OAAO,SAC1B,CA8CAN,EAAWO,iBAAiB,UAAU,SAAUC,GAC9CA,EAAEC,iBA7CJ,WACE,MAAMC,EAAQT,EAAYU,MAAMC,OAChC,GAAc,KAAVF,EAAc,CAChB,MAAMG,EAAM,IAAIC,eAEhBD,EAAIN,iBAAiB,aAAa,KAChCL,GAAA,IAGFW,EAAIN,iBAAiB,WAAW,KAC9BF,GAAA,IAGF,MAAMU,EAAS,mCASTC,EAAM,mDAAmDC,mBAC7DP,cACWK,IACbF,EAAIK,KAAK,MAAOF,GAAK,GACrBH,EAAIM,iBAAiB,eAAgB,oBAErCN,EAAIO,OAAS,WACX,GAAmB,MAAfP,EAAIQ,OAAgB,CACtB,MAAMC,EAAWC,KAAKC,MAAMX,EAAIY,cAChCC,QAAQC,IAAIL,EACd,MACEI,QAAQE,MAAM,qCAElB,EAEAf,EAAIgB,QAAU,WACZH,QAAQE,MAAM,qCAChB,EACAf,EAAIiB,MACN,CACF,CAIEC,EACF,IAEA7B,IAEA8B,YAAW,WACT3B,GACF,GAAG,KAEH4B,OAAO1B,iBAAiB,gBAAgB,WACtCL,GACF,IClEA,MAAMgC,EAAOpC,SAASqC,cAAc,SACpC,IAAIC,EAAY,GAEhB,MAAMC,EAAoBC,IACxB,IACE,MAAMC,EAAYhB,KAAKC,MAAMgB,aAAaC,QAAQH,IAElD,GADAZ,QAAQC,IAAIY,GACM,OAAdA,EAAoB,OAyCxB,OAxCAA,EAAUG,SAAQC,IAChBjB,QAAQC,IAAIgB,GACZjB,QAAQC,IAAIS,GACZ,MAAMQ,EAAcD,EAAKE,OACtBC,KAAIC,IACH,MAAMC,EAAQZ,EAAUa,MAAKD,GAASA,EAAME,KAAOH,IACnD,OAAOC,EAAQA,EAAMG,KAAKC,WAAa,EAAE,IAE1CC,KAAK,MACFC,EAAc,IAAIC,KAAKZ,EAAKa,cAAcC,mBAAmB,QAAS,CAC1EC,KAAM,UACNC,WAAOC,EACPC,SAAKD,IAEP1B,EAAK4B,mBACH,YACA,qMAIiBnB,EAAKO,gFACwBP,EAAKoB,qBAAqBpB,EAAKqB,4KAGjErB,EAAKsB,0IAGgDrB,8LAGvDU,iJAOX,IAGIf,CAGT,CAFE,MAAO/B,GACP0D,MAAM,uBAAuB1D,EAAE4C,aACjC,GAGIe,EAAYrE,SAASqC,cAAc,mBACnCiC,EAActE,SAASqC,cAAc,qBAE3CgC,EAAU5D,iBAAiB,SAAS,KAClCmB,QAAQC,IAAI,aACZO,EAAKmC,UAAY,IACjBhC,EAAkB,YAEpB+B,EAAY7D,iBAAiB,SAAS,KACpCmB,QAAQC,IAAI,eACZO,EAAKmC,UAAY,IACjBhC,EAAkB,cAGpBA,EAAkB","sources":["src/javascript/loader.js","src/library.js"],"sourcesContent":["const loader = document.getElementById('loader');\nconst searchForm = document.getElementById('search-form');\nconst searchInput = document.getElementById('search-input');\n\nfunction showLoader() {\n  loader.classList.add('active');\n}\n\nfunction hideLoader() {\n  loader.classList.remove('active');\n}\n\nfunction performSearch() {\n  const query = searchInput.value.trim();\n  if (query !== '') {\n    const xhr = new XMLHttpRequest();\n\n    xhr.addEventListener('loadstart', () => {\n      showLoader();\n    });\n\n    xhr.addEventListener('loadend', () => {\n      hideLoader();\n    });\n\n    const apiKey = '81805be47c20a9977d0669120b6add4a';\n\n    const options = {\n      method: 'GET',\n      headers: {\n        accept: 'application/json',\n      },\n    };\n\n    const url = `https://api.themoviedb.org/3/search/movie?query=${encodeURIComponent(\n      query,\n    )}&api_key=${apiKey}`;\n    xhr.open('GET', url, true);\n    xhr.setRequestHeader('Content-Type', 'application/json');\n\n    xhr.onload = function () {\n      if (xhr.status === 200) {\n        const response = JSON.parse(xhr.responseText);\n        console.log(response);\n      } else {\n        console.error('Wystąpił błąd podczas żądania API.');\n      }\n    };\n\n    xhr.onerror = function () {\n      console.error('Wystąpił błąd podczas żądania API.');\n    };\n    xhr.send();\n  }\n}\n\nsearchForm.addEventListener('submit', function (e) {\n  e.preventDefault();\n  performSearch();\n});\n\nshowLoader();\n\nsetTimeout(function () {\n  hideLoader();\n}, 250);\n\nwindow.addEventListener('beforeunload', function () {\n  showLoader();\n});\n","import './sass/main.scss';\nimport './javascript/loader.js';\n\nconst main = document.querySelector('#main');\nlet genresArr = [];\n\nconst loadWatchedFromLS = key => {\n  try {\n    const parsedArr = JSON.parse(localStorage.getItem(key));\n    console.log(parsedArr);\n    if (parsedArr === null) return;\n    parsedArr.forEach(film => {\n      console.log(film);\n      console.log(genresArr);\n      const movieGenres = film.genres\n        .map(genreId => {\n          const genre = genresArr.find(genre => genre.id === genreId);\n          return genre ? genre.name.toString() : '';\n        })\n        .join(', ');\n      const releaseDate = new Date(film.release_date).toLocaleDateString('en-US', {\n        year: 'numeric',\n        month: undefined,\n        day: undefined,\n      });\n      main.insertAdjacentHTML(\n        'beforeend',\n        `\n        <ul id=\"main__list\" class=\"main__list\">\n          <li id=\"main__list-item\" class=\"main__list-item\">\n            <figure id=\"main__movie\" class=\"main__movie\">\n              <img id=\"${film.id}\" class=\"main__image\"\n                src=\"https://image.tmdb.org/t/p/w500${film.poster_path}\" alt=\"${film.title}\" />\n              <figcaption id=\"main__caption\" class=\"main__caption\">\n                <span id=\"main__movie-name\" class=\"main__movie-name\">\n                  ${film.original_title}\n                </span>\n                <div>\n                <span id=\"main__movie-genres\" class=\"main__movie-data\">${movieGenres}</span>\n                <span class=\"main__movie-data\">|</span>\n                <span id=\"main__movie-release-date\" class=\"main__movie-release-date main__movie-data\">\n                ${releaseDate}\n                </span>\n                </div>\n              </figcaption>\n            </figure>\n          </li>\n        </ul>\n      `,\n      );\n    });\n    return parsedArr;\n  } catch (e) {\n    alert(`There was a mistake ${e.toString()}`);\n  }\n};\n\nconst userQueue = document.querySelector('#user-queue-btn');\nconst userWatched = document.querySelector('#user-watched-btn');\n\nuserQueue.addEventListener('click', () => {\n  console.log('queue btn');\n  main.innerHTML = ' ';\n  loadWatchedFromLS('queue');\n});\nuserWatched.addEventListener('click', () => {\n  console.log('watched btn');\n  main.innerHTML = ' ';\n  loadWatchedFromLS('watched');\n});\n\nloadWatchedFromLS('watched');\n"],"names":["$1b853ccb828b18af$var$loader","document","getElementById","$1b853ccb828b18af$var$searchForm","$1b853ccb828b18af$var$searchInput","$1b853ccb828b18af$var$showLoader","classList","add","$1b853ccb828b18af$var$hideLoader","remove","addEventListener","e","preventDefault","query","value","trim","xhr","XMLHttpRequest","apiKey","url","encodeURIComponent","open","setRequestHeader","onload","status","response","JSON","parse","responseText","console","log","error","onerror","send","$1b853ccb828b18af$var$performSearch","setTimeout","window","$9a8afeea60b9dfd3$var$main","querySelector","$9a8afeea60b9dfd3$var$genresArr","$9a8afeea60b9dfd3$var$loadWatchedFromLS","key","parsedArr","localStorage","getItem","forEach","film","movieGenres","genres","map","genreId","genre","find","id","name","toString","join","releaseDate","Date","release_date","toLocaleDateString","year","month","undefined","day","insertAdjacentHTML","poster_path","title","original_title","alert","$9a8afeea60b9dfd3$var$userQueue","$9a8afeea60b9dfd3$var$userWatched","innerHTML"],"version":3,"file":"library.4999cd30.js.map"}